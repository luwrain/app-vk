
package org.luwrain.app.vk.api;

import com.vk.api.sdk.client.AbstractQueryBuilder;
import com.vk.api.sdk.client.VkApiClient;
import com.vk.api.sdk.client.actors.GroupActor;
import com.vk.api.sdk.client.actors.UserActor;
import com.vk.api.sdk.objects.messages.responses.GetConversationsResponse;

import java.util.Arrays;
import java.util.List;

public class MessagesGetConversationsQuery extends AbstractQueryBuilder<MessagesGetConversationsQuery, GetConversationsResponse>
{
    public MessagesGetConversationsQuery(VkApiClient client, UserActor actor)
    {
        super(client, "messages.getConversations", GetConversationsResponse.class);
        accessToken(actor.getAccessToken());
    }


    public MessagesGetConversationsQuery offset(Integer value)
    {
        return unsafeParam("offset", value);
    }

    public MessagesGetConversationsQuery count(Integer value)
    {
        return unsafeParam("count", value);
    }

    public MessagesGetConversationsQuery startMessageId(Integer value)
    {
        return unsafeParam("start_message_id", value);
    }

    public MessagesGetConversationsQuery unread(Boolean value)
    {
        return unsafeParam("unread", value);
    }

    public MessagesGetConversationsQuery important(Boolean value)
    {
        return unsafeParam("important", value);
    }

    public MessagesGetConversationsQuery unanswered1(Boolean value)
    {
        return unsafeParam("unanswered", value);
    }

    @Override
    protected MessagesGetConversationsQuery getThis() {
        return this;
    }

    @Override
    protected List<String> essentialKeys() {
        return Arrays.asList("access_token");
    }
}
